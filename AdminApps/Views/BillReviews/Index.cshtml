@model PagedList<AdminApps.Models.BillReview>

@{
    ViewBag.Title = "My Bill Reviews";
    ViewBag.ModuleName = "Bills";
}

<div class="row">
    <div class="col col-md-6">
        <h2>@ViewBag.Title</h2>
    </div>
    <div class="col col-md-6">
        @using (Html.BeginForm("Index", "BillReviews", FormMethod.Get))
        {
            <div style="float: right;">
                Find by Bill #: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
                <input type="submit" value="Search" /><br />
                <small>HINT: To filter by Bill Type enter the Bill Prefix only ("AB", "SB", etc.)</small>
            </div>
        }
    </div>
</div>

<p><small>The following table lists your previously submitted Bill Reviews:</small></p>
<table class="table table-condensed table-striped">
    <tr>
        <th>
            @Html.ActionLink("Bill #", "Index", new { sortOrder = ViewBag.BillSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Recommendation", "Index", new { sortOrder = ViewBag.RecommendationSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().FiscalImpactTotal)
        </th>
        <th>
            @Html.ActionLink("Date Created", "Index", new { sortOrder = ViewBag.CreatedAtSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.ActionLink(item.Bill.CompositeBillNumber, "Details", "Bills", new { id = item.BillID }, null)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Recommendation.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FiscalImpactTotal)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedAtDate)
            </td>
            <td>
                @Html.ActionLink("View", "Details", new { id = item.ID }, new { @class = "btn btn-default btn-xs" })
            </td>
        </tr>
    }

</table>

<div>
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, pageSize = Model.PageSize }))
    Showing @Model.FirstItemOnPage to @Model.LastItemOnPage of @Model.TotalItemCount Bills
</div>