@model AdminApps.ViewModels.BillReviewViewModel

@{
    ViewBag.Title = "Bill Review Details";
    ViewBag.ModuleName = "Bills";
}

<h2>
    @ViewBag.Title
    @if (Model.DisplayAsRead == false)
    {
        @Html.Encode(" (Unread)");
    }
</h2>
@if (!Model.UpToDate)
{
    <h3 class="text-danger">WARNING: This Bill Review is out of date.@(Model.UserCanUpdate ? " Please click the 'Update!' button below to confirm or revise your review." : "")</h3>
}


@if (Model.DisplayAsRead == false)
{
    @Html.ActionLink("Mark As Read", "MarkAsRead", "BillReviews", new { id = Model.ID }, new { @class = "btn btn-default" })
}

<p>@Html.DisplayFor(model => model.ApprovedReviewMessage)</p>

@Html.DisplayFor(model => model)

@if (Model.UserCanApprove == true && Model.UpToDate)
{
    <p>
        @Html.ActionLink("Approve Review and Submit to Department", "Approve", "BillReviews", new { id = Model.ID }, new { @class = "btn btn-success" })
    </p>
}

<p>
@if (Model.UserCanEdit == true && Model.UpToDate)
{
        @Html.ActionLink("Edit Review", "Edit", new { id = Model.ID }, new { @class = "btn btn-default" })
}
else if (Model.UserCanUpdate)
{
        @Html.ActionLink("Update!", "Update", new { id = Model.ID }, new { @class = "btn btn-danger btn-sm" })
}
else
{
    <div class="text-danger">@Html.DisplayFor(model => model.EditMessage)</div>
}
</p>

<p>
    @Html.ActionLink("Back to Bill", "Details", "Bills", new { id = Model.BillID }, new { @class = "btn btn-default" })
</p>


