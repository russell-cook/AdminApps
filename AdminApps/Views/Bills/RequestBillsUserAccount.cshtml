@model AdminApps.ViewModels.BillsUserAccountRequestViewModel

@{
    ViewBag.Title = "Request User Account";
    ViewBag.ModuleName = "Bills";
}

<h2>Request User Account</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.DivID)
    @Html.HiddenFor(model => model.DeptID)
    @Html.HiddenFor(model => model.ID)

    <div class="form-horizontal">
        <p>To request an account for a user within @Html.DisplayFor(model => model.AgencyName) please fill out and submit the form below.</p>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Request.IsAuthenticated && User.IsInRole("BillsDiv"))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.RolesList, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.RequestedApprovalLevel, Model.RolesList, "--Select Role--", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.RequestedApprovalLevel, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            @Html.HiddenFor(model => model.RequestedApprovalLevel)
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit Request" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to User Account Requests", "BillsUserAccountRequests")
</div>
